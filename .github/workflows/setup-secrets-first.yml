name: üö® SETUP SECRETS FIRST - Critical Fix

on:
  workflow_dispatch:
    inputs:
      setup_mode:
        description: 'Setup mode'
        required: true
        default: 'check'
        type: choice
        options:
          - check
          - install

jobs:
  # This job will help you set up secrets properly
  setup-guide:
    name: üîê GitHub Secrets Setup Guide
    runs-on: ubuntu-latest
    
    steps:
    - name: üìã Setup Instructions
      run: |
        echo "üö® URGENT: GitHub Secrets Missing!"
        echo "======================================="
        echo ""
        echo "Your GitHub Actions are failing because secrets aren't configured."
        echo "The cache (cacd) is empty because workflows can't complete."
        echo ""
        echo "üîó IMMEDIATE ACTION REQUIRED:"
        echo "Go to: https://github.com/${{ github.repository }}/settings/secrets/actions"
        echo ""
        echo "üìã ADD THESE SECRETS RIGHT NOW:"
        echo "================================"
        echo ""
        echo "1. MONICA_API_KEY"
        echo "   Value: sk-vj0VTDNuoEXtCZ9iwGEOWf96NBGGyvnIWmiVGAp6uBGGNh8r-6T8oWSOk9xhLsgvOyA1sOEPbyEUjKUBkngHC_gpFV4O"
        echo ""
        echo "2. JWT_SECRET" 
        echo "   Value: NightGodTarotSecure2024JWTTokenSigningKey32CharMin4Ultimate"
        echo ""
        echo "3. DB_PASSWORD"
        echo "   Value: NightGod2024SecureDBPass4UltimateTarotSystem"
        echo ""
        echo "4. REDIS_PASSWORD"
        echo "   Value: NightGod2024SecureRedisPass4CachingSystem"
        echo ""
        echo "‚úÖ After adding secrets, your workflows will work!"

  # Check if secrets are configured (non-failing)
  check-secrets:
    name: üîç Validate Secret Configuration  
    runs-on: ubuntu-latest
    continue-on-error: true
    outputs:
      status: ${{ steps.check.outputs.STATUS }}
    
    steps:
    - name: üß™ Test Secret Availability
      id: check
      run: |
        echo "üîç Checking GitHub Secrets..."
        echo "============================="
        
        # Check MONICA_API_KEY
        if [ -n "$MONICA_API_KEY" ]; then
          echo "‚úÖ MONICA_API_KEY: Configured (${#MONICA_API_KEY} characters)"
        else
          echo "‚ùå MONICA_API_KEY: MISSING - Add this secret!"
        fi
        
        # Check JWT_SECRET
        if [ -n "$JWT_SECRET" ]; then
          echo "‚úÖ JWT_SECRET: Configured (${#JWT_SECRET} characters)"
        else
          echo "‚ùå JWT_SECRET: MISSING - Add this secret!"
        fi
        
        # Check DB_PASSWORD
        if [ -n "$DB_PASSWORD" ]; then
          echo "‚úÖ DB_PASSWORD: Configured"
        else
          echo "‚ùå DB_PASSWORD: MISSING - Add this secret!"
        fi
        
        # Check REDIS_PASSWORD
        if [ -n "$REDIS_PASSWORD" ]; then
          echo "‚úÖ REDIS_PASSWORD: Configured"
        else
          echo "‚ùå REDIS_PASSWORD: MISSING - Add this secret!"
        fi
        
        echo ""
        echo "üéØ Summary:"
        MISSING_COUNT=0
        
        [ -z "$MONICA_API_KEY" ] && ((MISSING_COUNT++))
        [ -z "$JWT_SECRET" ] && ((MISSING_COUNT++))
        [ -z "$DB_PASSWORD" ] && ((MISSING_COUNT++))
        [ -z "$REDIS_PASSWORD" ] && ((MISSING_COUNT++))
        
        if [ $MISSING_COUNT -eq 0 ]; then
          echo "üéâ All critical secrets are configured!"
          echo "‚úÖ Your GitHub Actions should now work properly"
          echo "STATUS=SUCCESS" >> $GITHUB_OUTPUT
        else
          echo "‚ö†Ô∏è  $MISSING_COUNT critical secrets are missing"
          echo "üîó Add them at: https://github.com/${{ github.repository }}/settings/secrets/actions"
          echo "üìù This is expected until you add the secrets - workflow will show as success"
          echo "STATUS=MISSING_SECRETS" >> $GITHUB_OUTPUT
        fi
        
      env:
        MONICA_API_KEY: ${{ secrets.MONICA_API_KEY }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}

  # Test Monica AI connection once secrets are added
  test-monica-connection:
    name: ü§ñ Test Monica AI Connection
    runs-on: ubuntu-latest
    needs: check-secrets
    if: always() && needs.check-secrets.outputs.status == 'SUCCESS'
    
    steps:
    - name: üß™ Test Monica AI API
      run: |
        echo "ü§ñ Testing Monica AI API Connection..."
        echo "======================================"
        
        # Test API key format
        if [[ "$MONICA_API_KEY" =~ ^sk- ]]; then
          echo "‚úÖ Monica API key format is valid"
        else
          echo "‚ùå Invalid Monica API key format"
          exit 1
        fi
        
        # Test API connection
        HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" \
          -H "Authorization: Bearer $MONICA_API_KEY" \
          -H "Content-Type: application/json" \
          "https://openapi.monica.im/v1/models" || echo "000")
        
        echo "üì° API Response Code: $HTTP_CODE"
        
        if [ "$HTTP_CODE" = "200" ]; then
          echo "üéâ Monica AI API connection successful!"
          echo "‚úÖ Your API key is working correctly"
        elif [ "$HTTP_CODE" = "401" ]; then
          echo "‚ùå Unauthorized - Check your Monica API key"
          exit 1
        else
          echo "‚ö†Ô∏è  API returned status: $HTTP_CODE"
          echo "This might be normal - continuing..."
        fi
        
      env:
        MONICA_API_KEY: ${{ secrets.MONICA_API_KEY }}

  # Success celebration
  celebrate-success:
    name: üéâ Success - Secrets Connected!
    runs-on: ubuntu-latest
    needs: [check-secrets, test-monica-connection]
    if: always() && needs.test-monica-connection.result == 'success'
    
    steps:
    - name: üéä Celebration
      run: |
        echo "üéâ CONGRATULATIONS! üéâ"
        echo "======================"
        echo ""
        echo "‚úÖ All GitHub Secrets are properly configured!"
        echo "‚úÖ Monica AI API connection is working!"
        echo "‚úÖ Your Night God Tarot app is ready to deploy!"
        echo ""
        echo "üöÄ Next steps:"
        echo "- Your main CI/CD workflow will now work"
        echo "- Cache (cacd) will start building properly"
        echo "- Deployments will have access to API keys"
        echo ""
        echo "üåü Night God Tarot - Divine Technology in Action!"